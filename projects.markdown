---
layout: page
title: Projects
permalink: /projects/
---

# NooDS
My most recent project focuses on a system that's near and dear to my heart. The Nintendo DS was my first video game console; a wonderful reward after all those weeks of underpaid newspaper delivery. The DS has some of my favourite games even to this day, but I never imagined that I would end up writing an emulator for it! NooDS was born after I got tired of updating NoiES. Once again I was taking a big step up, and I honestly wasn't sure if I would get very far with this one. It took weeks to get even the most basic output from DS homebrew, and the first commercial games didn't start booting until months after that. There were plenty of times where I felt like I would never reach that milestone, but I'm glad that I never gave up because it felt so good when I did! This project has continually pushed me to reach new heights, and I've managed to write a functional 3D renderer, a competent synchronous audio system, and even add support for Game Boy Advance games! Considering the competition, I don't expect NooDS to be much more than a curiosity to the emulation community at large, but I'm doing my best to make it a fully-featured, usable emulator. I've also been writing blog posts to document my progress, which has been fun as well. At the end of the day I'm just doing what interests me, but if anyone else is interested as well, you're more than welcome to join me on this journey!

# NoiES
The leap from CHIP-8 to something like the NES is pretty substantial, but there isn't much in between. I actually attempted an original Game Boy emulator before tackling the NES, but I got stuck and decided to scrap it. Writing NoiES, my clumsy NES emulator, taught me much more about emulation than I expected going into it. I learned about interrupts, addressing modes, I/O registers, and much more. I was tasked with recreating actual graphics hardware, and eventually audio hardware as well. After only a few days of work I managed to get some initial output, but I spent months fixing, refining, and adding things. I ended up with a fairly complete NES emulator, and I even ported it to the Switch! I was pretty happy with my work at the time, but looking back now there are a lot of things that I would change. The audio implementation stands out in my mind as one of the biggest trainwrecks of this project. Because I was doing it to challenge myself, I didn't look at any other emulator's code for reference. Couple that with the fact that this was my first time working with anything audio-related, and you end up with a horrible mess that would make any experienced emulator developer cry. But hey, at least it somehow doesn't sound completely terrible!

# CHIP-GR8
CHIP-8 interpreters are like the "hello, world!" of emulator programming. With a mere 35 opcodes, basic 2-colour display, and 4 kilobytes of memory, CHIP-8 offers one of the simplest introductions to the fundamentals of emulation. My emulation journey began with CHIP-GR8, a "gr8" CHIP-8 emulator that wasn't really all that great. Coming in at only 374 lines of code, there's not a whole lot to it, but writing it taught me about things like registers, the program counter, and assembly code. That stuff feels like common knowledge to me now, but back in January of 2019 I had never seen an assembly instruction in my life! I only spent a few days on this project, and it probably has bugs that were never fixed, but I was feeling confident and wanted to move on to greater things.
